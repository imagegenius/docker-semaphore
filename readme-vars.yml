---

# project information
project_name: semaphore
project_url: "https://semaphoreui.com/"
project_logo: "https://raw.githubusercontent.com/imagegenius/templates/main/unraid/img/semaphore.png"
project_blurb: "Semaphore is a modern UI for Ansible. It lets you easily run Ansible playbooks, get notifications about fails, control access to deployment system."
project_github_repo_url: "https://github.com/imagegenius/docker-{{ project_name }}"

project_deprecation_status: true
project_deprecation_message: |
  No longer use this image, alternative images exist.

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest" }
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest" }

# development version
development_versions: false

# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "</path/to/appdata>", desc: "Appdata Path" }
opt_param_usage_include_vols: false
param_usage_include_ports: true
param_ports:
  - { external_port: "3000", internal_port: "3000", port_desc: "WebUI Port" }
param_usage_include_env: true
param_env_vars:
  - { env_var: "SEMAPHORE_DB_DIALECT", env_value: "bolt", desc: "Choose either `bolt`, `postgres` or `mysql`. If `bolt` is chosen, the optional variables (`SEMAPHORE_DB...`) do not need to be specified as `bolt` is a 'built-in' database" }
  - { env_var: "SEMAPHORE_ADMIN", env_value: "admin", desc: "Specify the admin user" }
  - { env_var: "SEMAPHORE_ADMIN_PASSWORD", env_value: "password", desc: "Specify the admin password" }
  - { env_var: "SEMAPHORE_ADMIN_NAME", env_value: "John Doe", desc: "Specify the admin name" }
  - { env_var: "SEMAPHORE_ADMIN_EMAIL", env_value: "example@me.com", desc: "Specify the admin email" }
  - { env_var: "SEMAPHORE_ACCESS_KEY_ENCRYPTION", env_value: "admin", desc: "Specify the key for encrypting access keys in database. It must be generated by using the following command: `head -c32 /dev/urandom | base64`." }
param_device_map: false
cap_add_param: false

# optional container parameters
opt_param_usage_include_env: true
opt_param_env_vars:
  - { env_var: "SEMAPHORE_DB_HOST", env_value: "192.168.1.x", desc: "Host IP of PostgreSQL or MySQL" }
  - { env_var: "SEMAPHORE_DB_USER", env_value: "semaphore", desc: "PostgreSQL/MySQL database user" }
  - { env_var: "SEMAPHORE_DB_PASS", env_value: "semaphore", desc: "PostgreSQL/MySQL database password" }
  - { env_var: "SEMAPHORE_DB", env_value: "semaphore", desc: "PostgreSQL/MySQL database" }

# optional parameters
optional_block_1: false
optional_block_1_items: ""

# unraid template
unraid_category: "Cloud: Network:Other Tools:"

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  The WebUI can be accessed at `http://your-ip:3000`, login with the admin user/password set in the variables.

  The home for Semaphore (`abc`) is set to `/config`, so that SSH keys can be stored in `/config/.ssh`.

  To get SSH working, you first need to SSH into the client (with keys of course). Add your key to `/config/.ssh/id_rsa`, make sure that you run `chmod 600 id_rsa` and `chown abc:abc id_rsa`.

  You can now run `s6-setuidgid abc /bin/bash` to open a shell as `abc`, and run your SSH commands (`ssh <user>@<host>`), and you should be prompted with `yes`/`no`, type `yes`, then exit the SSH session, Semaphore/Ansible should now be able to SSH into that client.



# changelog
changelogs:
  - { date: "24.04.24:", desc: "rebase to alpine 3.19" }
  - { date: "28.04.23:", desc: "Added rsync package." }
  - { date: "14.04.23:", desc: "Initial release." }
